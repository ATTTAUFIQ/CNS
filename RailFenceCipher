public class RailFenceCipher {
    public static String encrypt(String text, int rail) {
        StringBuilder[] rails = new StringBuilder[rail];
        for (int i = 0; i < rail; i++) rails[i] = new StringBuilder();
        int dir = 1, row = 0;
        for (char c : text.toCharArray()) {
            rails[row].append(c);
            if (row == 0) dir = 1;
            if (row == rail - 1) dir = -1;
            row += dir;
        }
        StringBuilder result = new StringBuilder();
        for (StringBuilder railStr : rails) result.append(railStr);
        return result.toString();
    }

    public static String decrypt(String cipher, int rail) {
        int len = cipher.length();
        char[] result = new char[len];
        int[] railPattern = new int[len];
        int dir = 1, row = 0, index = 0;
        for (int i = 0; i < len; i++) {
            railPattern[i] = row;
            if (row == 0) dir = 1;
            if (row == rail - 1) dir = -1;
            row += dir;
        }
        for (int i = 0; i < rail; i++) {
            for (int j = 0; j < len; j++) {
                if (railPattern[j] == i && index < len) {
                    result[j] = cipher.charAt(index++);
                }
            }
        }
        return new String(result);
    }

    public static void main(String[] args) {
        String text = "HELLO WORLD";
        int rail = 3;
        String cipher = encrypt(text, rail);
        System.out.println("Cipher: " + cipher);
        System.out.println("Decrypted: " + decrypt(cipher, rail));
    }
}
